#include <iostream>

void main() {
    long N = 0;     // Змінна для номера елемента
    long S = 0;     // Змінна для накопичення суми
    long P = 1;     // Змінна для збереження поточного значення елемента прогресії

    _asm {
        ; початок асемблерної вставки

        m1 :
        inc N; Збільшення аргументу N
            mov EAX, N; Завантажуємо N в EAX
            imul EAX, N; Обчислення n ^ 2, тепер EAX = N ^ 2
            mov EBX, EAX; Зберігаємо n ^ 2 в EBX для наступних операцій

            mov EAX, N; Повертаємо N в EAX
            imul EAX, 6; Обчислення 6 * N, тепер EAX = 6 * N
            add EAX, EBX; Додаємо n ^ 2 + 6 * N
            add EAX, 28; Додаємо 28, тепер EAX = n ^ 2 + 6 * N + 28
            mov P, EAX; Зберігаємо результат у P(поточний елемент прогресії)

            add S, EAX; Накопичення суми, S = S + P
            cmp S, 1000; Порівняння суми з 1000
            jle m1; Якщо сума менше або дорівнює 1000, повертаємось до m1

            ; закінчення асемблерної вставки
    }

    std::cout << "Element №: " << N << std::endl;
}
